{"version":3,"file":"static/js/267.7449b683.chunk.js","mappings":"sMACA,GAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCY9K,EATmB,SAACA,GAChB,IAAIC,EAAO,UAAYD,EAAME,GAE7B,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCFtC,EAJgB,SAACN,GACb,OAAO,gBAAKG,UAAWC,EAAAA,QAAhB,SAA4BJ,EAAMO,W,iDCCvCC,GAAcC,EAAAA,EAAAA,GAAiB,IAgBrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAhC,EAduB,SAACX,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUV,GACrBF,KAAK,iBAAiBa,YAAY,0BAE7C,0BAAK,6CCsBjB,EA9BgB,SAACnB,GACb,IAAIoB,EAAQpB,EAAMqB,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAiBJ,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OACzEwB,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE1B,OAC7DkB,EAAMS,eAM3B,OAAI7B,EAAM8B,QAEN,iBAAK3B,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,YAAhB,SACKkB,KAGL,iBAAKnB,UAAWC,EAAAA,SAAhB,WACI,gBAAKD,UAAU,UAAf,UACI,yBAAMuB,OAGV,SAAC,EAAD,CAAgBd,SAhBR,SAACmB,GACjB/B,EAAMgC,YAAYD,EAAOF,0BAGJ,SAAC,KAAD,CAAUxB,GAAI,Y,0DCbvC4B,EAA6B,SAACb,GAAD,MAAY,CACzCU,OAAQV,EAAMc,KAAKJ,SCkBvB,GAAeK,E,QAAAA,KACXC,EAAAA,EAAAA,KAjBkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACgB,GACtB,MAAO,CACHL,YAAa,SAACH,GACVQ,GAASC,EAAAA,EAAAA,GAAmBT,UDRT,SAACU,GAAe,IAErCC,EAFoC,0IAGtC,WACI,OAAKC,KAAKzC,MAAM8B,QAET,SAACS,GAAD,UAAeE,KAAKzC,SAFI,SAAC,KAAD,CAAUK,GAAG,cAJV,GAEVqC,EAAAA,WAWhC,OAFqCN,EAAAA,EAAAA,IAAQH,EAARG,CAAqCI,KCI9E,CAGEG","sources":["webpack://react-way-of-samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/addMessageForm/addMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__HskOd\",\"dialogsItem\":\"Dialogs_dialogsItem__7Q-Sq\",\"active\":\"Dialogs_active__Hx1n7\",\"messages\":\"Dialogs_messages__GHjIX\",\"message\":\"Dialogs_message__CjwIc\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"dialogs\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialogs}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./addMessageForm/addMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messageElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={\"/login\"}/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div className=\"message\">\r\n                    <div>{messageElements}</div>\r\n\r\n                </div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect =(Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectesAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectesAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElement","dialogs","map","d","messageElements","messages","m","newMessageBody","isAuth","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}