{"version":3,"file":"static/js/419.32b3ca36.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusIthHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-way-of-samurai/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-way-of-samurai/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activatedEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activatedEditMode}>{this.props.status || \"==========\"}</span>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivatedEditMode}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode ] = useState(false);\r\n    let [status, setStatus ] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n\r\n   const deactivatedEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activatedEditMode}>{props.status || \"==========\"}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivatedEditMode} onChange={onStatusChange}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusIthHooks\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <img src={profile.photos.large} />\r\n\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}></ProfileStatusWithHooks>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__nDaha\",\"posts\":\"MyPosts_posts__d8hlG\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__H3R8D\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://i.pinimg.com/236x/c2/af/09/c2af0941a9eace5f0ba3dc63284d3860--mr-bean-funny-color-blue.jpg' />\r\n            { props.message}\r\n            <div>\r\n                <span>like</span>  {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n\r\n            <AddPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  name=\"newPostText\" component={Textarea} placeholder=\"Post message\"\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n\r\n            <div>\r\n                <button>add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps  = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n// import s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // WithAuthRedirect,\r\n)(ProfileContainer)\r\n\r\n\r\n"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","src","photos","large","Preloader","className","s","message","likesCount","MyPosts","postsElements","posts","reverse","map","p","AddPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"sourceRoot":""}